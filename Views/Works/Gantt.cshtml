@* Views/Works/Gantt.cshtml *@
@model TaskWorkManagement.Models.WorkIndexViewModel


@{
    ViewData["Title"] = "作業管理";
}

<br />
<br />
<h1 style="text-align:center;color:#7851A9">作業管理</h1>

<br />
<br />


<div class="row mb-3">
    <div class="col-md-1"></div>
    <div class="col-md-10">
        <a asp-controller="Works" asp-action="Create" class="btn btn-lg btn-outline-success">
            <i class="fas fa-plus"></i>添加任务
        </a>
        <a asp-controller="Works" asp-action="Index" class="btn btn-lg btn-outline-primary">
            <i class="fas fa-edit"></i>修改任务
        </a>
        <a asp-controller="Works" asp-action="Index" class="btn btn-lg btn-outline-danger">
            <i class="fas fa-trash-alt"></i>删除任务
        </a>
    </div>
    <div class="col-md-1"></div>
</div>
<div class="row align-items-start">

    <div class="col-md-1"></div>
    <div class="col-md-10">
        <div class="gantt-container overflow-auto">@*overflow-auto 用于控制元素内容的溢出行为,如使用滚动条*@
            <div class="gantt-header">
                <div class="gantt-row">
                    <div class="gantt-cell member-header bg-primary bg-opacity-25" sstyle="width:200px" style="font-weight:bold">作業</div>
                    <div class="gantt-cell member-header bg-primary bg-opacity-25" style="font-weight:bold">担当</div>

                    @{
                        // 获取甘特图的起始日期
                        DateTime tempStartDate = Model.Works.Where(w => w.CompletedDate == null).OrderBy(w => w.StartDate).Select(w => w.StartDate).FirstOrDefault(DateTime.Now);
                        DateTime ganttStartDate = tempStartDate < DateTime.Now ? tempStartDate : DateTime.Now;
                        int ganttStartMonth = ganttStartDate.AddMonths(-2).Month;
                        int ganttStartYear = ganttStartDate.AddMonths(-2).Year;

                        //获取甘特图开始的时间点
                        DateTime ganttStartDateTime = new DateTime(ganttStartYear, ganttStartMonth,1);

                        // 获取甘特图的结束日期
                        DateTime ganttDueDate = Model.Works.OrderByDescending(w => w.DueDate).Select(w => w.DueDate).FirstOrDefault(DateTime.Now);
                        int ganttDueMonth = ganttDueDate.AddMonths(2).Month;
                        int ganttDueYear = ganttDueDate.AddMonths(2).Year;

						// 计算总的月份跨度
						int lengthOfMonths = (ganttDueYear - ganttStartYear) * 12 + (ganttDueMonth - ganttStartMonth) + 1;

                        for (int i = 0; i < lengthOfMonths; i++)
                        {
                            int month = (ganttStartMonth + i - 1) % 12 + 1;
                            int year = (ganttStartMonth + i - 1) / 12 + ganttStartYear;
                            <div class="gantt-month-container">
                                <div class="gantt-month-header bg-primary bg-opacity-25" style="font-weight:bold">@year 年 @month 月</div>
                                <div class="gantt-decade-container">
                                    <div class="gantt-decade-cell bg-primary bg-opacity-25" style="font-weight:bold">上旬</div>
                                    <div class="gantt-decade-cell bg-primary bg-opacity-25" style="font-weight:bold">中旬</div>
                                    <div class="gantt-decade-cell bg-primary bg-opacity-25" style="font-weight:bold">下旬</div>
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>

            <div class="gantt-body">
                @foreach (var work in Model.Works)
                {
                    <div class="gantt-row mb-2" data-work-id="@work.WorkId">
                        <div class="gantt-cell member-cell bg-primary bg-opacity-10" style="color:blue">
                            @work.Title
                        </div>
                        <div class="gantt-cell member-cell bg-primary bg-opacity-10">
                            @{
                                String showMembers = "";
                                foreach (var memberId in work.SelectedMemberIds)
                                {
                                    String member = Model.Members.FirstOrDefault(m => m.MemberId == memberId).MemberName;
                                    showMembers += member + " ";
                                }
                                <span style="color:mediumslateblue">@showMembers</span>
                            }
                        </div>

                        @{

                            var startDateRange = GetDateRange(work.StartDate, ganttStartDateTime);
                            var endDateRange = GetDateRange(work.DueDate, ganttStartDateTime);

                            var statusClass = "bg-warning bg-opacity-25";// 进行中的任务，显示黄色
                            if (work.CompletedDate != null && work.CompletedDate <= work.DueDate)
                            {
                                statusClass = "bg-success bg-opacity-25"; // 正常完成的，显示绿色
                            }
                            else if (work.DueDate < DateTime.Today)
                            {
                                statusClass = "bg-danger bg-opacity-25"; // 逾期任务，显示红色
                            }

                            for (int i = 0; i < lengthOfMonths*3; i++)
                            {
                                if (i >= startDateRange && i <= endDateRange)
                                {
                                    <div class="gantt-decade-context task-bar @statusClass
                                             @(i == startDateRange ? "rounded-start" : "")
                                             @(i == endDateRange ? "rounded-end" : "")"
                                         data-work-id="@work.WorkId" title="@work.Title">
                                        @if (i == startDateRange)
                                        {
                                            <i class="bi bi-caret-left-fill"></i>
                                        }
                                        @if (i == endDateRange)
                                        {
                                            <i class="bi bi-caret-right-fill"></i>
                                        }
                                    </div>
                                }
                                else
                                {
                                    <div class="gantt-decade-context"></div>
                                }
                            }
                        }
                    </div>
                }
            </div>
        </div>
    </div>
    <div class="col-md-1"></div>

</div>


@section modal{
<!-- 任务详情模态框 -->
<div class="modal fade" id="taskDetailModal" tabindex="-1" aria-labelledby="taskDetailModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                    <div class="modal-title" id="taskDetailModalLabel" style="color:cadetblue;font-size:30px;text-align:center">作業詳細</div>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">@*data-bs-dismiss="modal"：点击时关闭模态框*@
                </button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                        <label style="color:cadetblue;font-size:30px">作業:</label>
                        <p id="detail-title" class="form-control-static" style="color:lightskyblue;font-size:20px"></p>
                </div>
                <div class="mb-3">
                        <label style="color:cadetblue;font-size:30px">描述:</label>
                        <p id="detail-description" class="form-control-plaintext" style="color:lightskyblue;font-size:20px"></p>
                </div>
                <div class="mb-3">
                        <label style="color:cadetblue;font-size:30px">开始日期:</label>
                        <p id="detail-startdate" class="form-control-plaintext" style="color:lightskyblue;font-size:20px"></p>
                </div>
                <div class="mb-3">
                        <label style="color:cadetblue;font-size:30px">締切日:</label>
                        <p id="detail-duedate" class="form-control-plaintext" style="color:lightskyblue;font-size:20px"></p>
                </div>
                <div class="mb-3">
                        <label style="color:cadetblue;font-size:30px">完了日:</label>
                        <p id="detail-completedDate" class="form-control-plaintext" style="color:lightskyblue;font-size:20px"></p>
                </div>
                <div class="mb-3">
                        <label style="color:cadetblue;font-size:30px">ステータス:</label>
                        <p id="detail-status" class="form-control-plaintext" style="color:lightskyblue;font-size:20px"></p>
                </div>
                <div class="mb-3">
                        <label style="color:cadetblue;font-size:30px">優先度:</label>
                        <p id="detail-priority" class="form-control-plaintext" style="color:lightskyblue;font-size:20px"></p>
                </div>
                <div class="mb-3">
                        <label style="color:cadetblue;font-size:30px">担当者:</label>
                        <p id="detail-members" class="form-control-plaintext" style="color:lightskyblue;font-size:20px"></p>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-success" data-bs-dismiss="modal">关闭</button>
                    <button type="button" class="btn btn-outline-primary" id="edit-task">编辑</button>
            </div>
        </div>
    </div>
</div>
}


@functions {
    // 计算在甘特图中的起始时间
    int? GetDateRange(DateTime date, DateTime ganttStartDate)
    {
        if (date < ganttStartDate) return null ;//TODO 修改返回值

        //计算日期长度
        int yearDiff = date.Year - ganttStartDate.Year;
        int monthDiff = date.Month - ganttStartDate.Month;
        int lengthOfDate = yearDiff * 12 + monthDiff;

        // 计算旬的位置 (0=上旬, 1=中旬, 2=下旬)
        int decade = 0;
        if (date.Day > 20)
        {
            decade = 2;//21至月末为下旬
        }
        else if (date.Day > 10)
        {
            decade = 1;//11至20为中旬
        }

        return lengthOfDate * 3 + decade;
    }
}

@section Styles {
    <style>
        .gantt-container {
            overflow-x: auto;
            border: 1px solid #ddd;
            /* 确保容器有明确的高度 */
            height: calc(100vh - 300px); 
        }

        .gantt-header, .gantt-body {
            /* 确保它们不会限制sticky元素的定位 */
            position: relative;
        }

        .gantt-row {
            display: flex;
            min-width: 100%;
            height: 60px;
            position: relative;
        }

        .gantt-cell {
            min-width: 80px;
            border-right: 1px solid #ddd;
            border-bottom: 1px solid #ddd;
            padding: 2px;
            position: sticky;
            left: 0;
        }

        .member-header, .member-cell {
            background-color: #f8f9fa;
            display: flex;
            align-items: center;
            justify-content: center;
            height: 60px; /* 与行高一致 */
        }

        /* 第一列：作业名称 */
        .gantt-cell.member-header:first-child,
        .gantt-cell.member-cell:first-child {
            min-width: 200px;
            max-width: 200px;
            left: 0;
            z-index: 50;
        }

        /* 第二列：担当 */
        .gantt-cell.member-header:nth-child(2),
        .gantt-cell.member-cell:nth-child(2) {
            min-width: 120px;
            max-width: 120px;
            left: 200px; /* 等于第一列的宽度 */
            z-index: 45; 
        }

        /* 表头需要更高的z-index */
        .gantt-header .member-header {
            z-index: 55; /* 比数据行的固定列更高 */
        }

            .gantt-header .member-header:nth-child(2) {
                z-index: 50;
            }

        .gantt-month-container {
            display: flex;
            flex-direction: column;
            min-width: 240px;
            flex: 1;
        }

        .gantt-month-header {
            text-align: center;
            padding: 5px;
            border-right: 1px solid #ddd;
            border-bottom: 1px solid #ddd;
            background-color: #f8f9fa;
            font-weight: bold;
            height: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .gantt-decade-container {
            display: flex;
            height: 50%;
        }

        .gantt-decade-cell {
            flex: 1;
            text-align: center;
            padding: 5px;
            border-right: 1px solid #ddd;
            border-bottom: 1px solid #ddd;
            background-color: #f8f9fa;
            font-size: 0.8rem;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .gantt-decade-context {
            flex: 1;
            text-align: center;
            padding: 5px;
            border-right: 1px solid #ddd;
            border-bottom: 1px solid #ddd;
            background-color: #f8f9fa;
            font-size: 0.8rem;
            display: flex;
            align-items: center;
            justify-content: center;
            min-width: 80px;
            position: relative;
            z-index: 10;
        }

        /* 任务条样式 */
        .task-bar {
            cursor: pointer;
            position: relative;
            height: 30px;
            margin-top: 15px;
            transition: all 0.3s;
            z-index: 15;
        }

            .task-bar:hover {
                opacity: 0.8;
                transform: scaleY(1.1);
            }

        /* 任务箭头样式 */
        .task-arrow-start {
            position: absolute;
            left: 0;
            top: 50%;
            width: 0;
            height: 0;
            border-top: 10px solid transparent;
            border-bottom: 10px solid transparent;
            border-left: 10px solid #333;
            transform: translateY(-50%);
        }

        .task-arrow-end {
            position: absolute;
            right: 0;
            top: 50%;
            width: 0;
            height: 0;
            border-top: 10px solid transparent;
            border-bottom: 10px solid transparent;
            border-right: 10px solid #333;
            transform: translateY(-50%);
        }

        /* 不同状态的颜色 */
        .status-completed {
            background-color: lightblue !important;
        }

        .status-overdue {
            background-color: salmon !important;
        }

        .status-upcoming {
            background-color: lightyellow !important;
        }

        .status-normal {
            background-color: lightgreen !important;
        }
        /* 排序头部样式 */
        #member-sort-header {
            cursor: pointer;
            user-select: none;
        }

            #member-sort-header:hover {
                background-color: #e9ecef !important;
            }

        .feature-icon {
            margin-bottom: 1rem;
        }
    </style>
}

@section Scripts {
    <script>
        $(document).ready(function() {

            // 获取模态框DOM元素并创建Bootstrap 5 Modal实例
            var modalEl = document.getElementById('taskDetailModal');
            var taskModal = new bootstrap.Modal(modalEl);

            // 点击任务条显示详情
            $('.task-bar').click(function(e) {
                // e.stopPropagation();//阻止事件继续向上（父元素）冒泡
                var workId = $(this).data('work-id');
                loadTaskDetails(workId);
                taskModal.show();
            });

            // 编辑按钮点击跳转编辑页面
            $('#edit-task').click(function() {
                var workId = $('#taskDetailModal').data('work-id');
                if (workId) {
                    window.location.href = '/Works/Edit/' + workId;
                }
            });
                       
            // 加载任务详情函数，异步请求
            function loadTaskDetails(workId) {
                $.ajax({
                    url: '/Works/GetWorkDetails/' + workId,
                    type: 'GET',
                    success: function(data) {
                        $('#taskDetailModal').data('work-id', workId);
                        $('#detail-title').text(data.title); // 选择ID为 detail-title 的元素

                        var description = data.description || '无';
                        // 将换行符转换为<br>标签
                        description = description.replace(/\n/g, '<br>');
                        // 使用html()而不是text()来渲染HTML标签
                        $('#detail-description').html(description);

                        $('#detail-startdate').text(data.startDate);
                        $('#detail-duedate').text(data.dueDate);
                        $('#detail-completedDate').text(data.completedDate);
                        $('#detail-status').text(data.status);
                        $('#detail-priority').text(data.priorityText);
                        $('#detail-members').text(data.members.join(', '));
                    },
                    error: function() {
                        alert('加载任务详情失败');
                    }
                });
            }

            // 简单日期格式化函数 yyyy-MM-dd -> N年N月N日
            // function formatDate(dateString) {
            //     var date = new Date(dateString)?? null;
            //     if(date == null) return null;
            //     return date.getFullYear() + '年' + (date.getMonth() + 1) + '月' + date.getDate() + '日';
            // }
        });
    </script>
}
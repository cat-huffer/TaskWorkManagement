@* Views/Works/Gantt.cshtml *@
@model TaskWorkManagement.Models.WorkGanttViewModel

@{
    ViewData["Title"] = "作業管理";
}


<h1>作業管理</h1>

<div class="row mb-3">
    <div class="col-md-12">
        <a asp-controller="Works" asp-action="Create" class="btn btn-success">
            <i class="fas fa-plus"></i>添加任务
        </a>
    </div>
</div>
<div class="gantt-container overflow-auto">
    <div class="gantt-header">
        <div class="gantt-row">
            <div class="gantt-cell member-header bg-primary bg-opacity-25">作業</div>
            <div class="gantt-cell member-header bg-primary bg-opacity-25">担当</div>

            @{
                int currentMonth = Model.StartDate.Month;
                int currentYear = Model.StartDate.Year;
                for (int i = 0; i < 12; i++)
                {
                    int month = (currentMonth + i - 1) % 12 + 1;
                    int year = (currentMonth + i - 1) / 12 + currentYear;
                    <div class="gantt-month-container">
                        <div class="gantt-month-header bg-primary bg-opacity-25">@year 年 @month 月</div>
                        <div class="gantt-decade-container">
                            <div class="gantt-decade-cell bg-primary bg-opacity-25">上旬</div>
                            <div class="gantt-decade-cell bg-primary bg-opacity-25">中旬</div>
                            <div class="gantt-decade-cell bg-primary bg-opacity-25">下旬</div>
                        </div>
                    </div>
                }
            }
        </div>
    </div>

    @section modal{
        <!-- 任务详情模态框 -->
        <div class="modal fade" id="taskDetailModal" tabindex="-1" aria-labelledby="taskDetailModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="taskDetailModalLabel">任务详情</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">@*data-bs-dismiss="modal"：点击时关闭模态框*@
                        </button>
                    </div>
                    <div class="modal-body">
                        <div class="mb-3">
                            <label>任务名称:</label>
                            <p id="detail-title" class="form-control-static"></p>
                        </div>
                        <div class="mb-3">
                            <label>描述:</label>
                            <p id="detail-description" class="form-control-plaintext"></p>
                        </div>
                        <div class="mb-3">
                            <label>开始日期:</label>
                            <p id="detail-startdate" class="form-control-plaintext"></p>
                        </div>
                        <div class="mb-3">
                            <label>截止日期:</label>
                            <p id="detail-duedate" class="form-control-plaintext"></p>
                        </div>
                        <div class="mb-3">
                            <label>状态:</label>
                            <p id="detail-status" class="form-control-plaintext"></p>
                        </div>
                        <div class="mb-3">
                            <label>优先级:</label>
                            <p id="detail-priority" class="form-control-plaintext"></p>
                        </div>
                        <div class="mb-3">
                            <label>负责人:</label>
                            <p id="detail-members" class="form-control-plaintext"></p>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-outline-success" data-bs-dismiss="modal">关闭</button>
                        <button type="button" class="btn btn-success" id="edit-task">编辑</button>
                    </div>
                </div>
            </div>
        </div>
    }

    <div class="gantt-body">
        @foreach (var work in Model.Works)
        {
            <div class="gantt-row mb-2" data-work-id="@work.WorkId">
                <div class="gantt-cell member-cell bg-primary bg-opacity-10">
                    @work.Title
                </div>
                <div class="gantt-cell member-cell">
                    @string.Join(", ", work.MemberWorks.Select(mw => mw.Member.MemberName))
                </div>

                @{
                    var startOffset = GetDecadeOffset(work.StartDate, Model.StartDate);
                    var endOffset = GetDecadeOffset(work.DueDate, Model.StartDate);

                    var statusClass = "bg-success bg-opacity-25";
                    if (work.IsCompleted)
                    {
                        statusClass = "bg-info bg-opacity-25";
                    }
                    else if (DateTime.Today > work.DueDate)
                    {
                        statusClass = "bg-danger bg-opacity-25";
                    }
                    else if (DateTime.Today.AddDays(7) > work.DueDate)
                    {
                        statusClass = "bg-warning bg-opacity-25";
                    }

                    for (int i = 0; i < 36; i++)
                    {
                        if (i >= startOffset && i <= endOffset)
                        {
                            <div class="gantt-decade-context task-bar @statusClass
                                     @(i == startOffset ? "rounded-start" : "")
                                     @(i == endOffset ? "rounded-end" : "")"
                                 data-work-id="@work.WorkId">
                                @if (i == startOffset)
                                {
                                    <i class="bi bi-caret-left-fill"></i>
                                }
                                @if (i == endOffset)
                                {
                                    <i class="bi bi-caret-right-fill"></i>
                                }
                            </div>
                        }
                        else
                        {
                            <div class="gantt-decade-context"></div>
                        }
                    }
                }
            </div>
        }
    </div>
</div>


@functions {
    // 计算日期在甘特图中的位置偏移量
    int GetDecadeOffset(DateTime date, DateTime startDate)
    {
        // 计算总天数差
        var totalDays = (date - startDate).TotalDays;

        // 计算旬的位置 (0=上旬, 1=中旬, 2=下旬)
        int decade;
        if (date.Day <= 10) decade = 0;
        else if (date.Day <= 20) decade = 1;
        else decade = 2;

        // 计算月份差
        var monthDiff = (date.Year - startDate.Year) * 12 + date.Month - startDate.Month;

        return monthDiff * 3 + decade;
    }
}

@section Styles {
    <style>
        .gantt-container {
            overflow-x: auto;
            border: 1px solid #ddd;
        }

        .gantt-row {
            display: flex;
            min-width: 100%;
            height: 60px;
            position: relative;
        }

        .gantt-cell {
            min-width: 80px;
            border-right: 1px solid #ddd;
            border-bottom: 1px solid #ddd;
            position: relative;
            padding: 2px;
        }

        .member-header {
            min-width: 120px;
            max-width: 120px;
            position: sticky;
            left: 0;
            z-index: 2;
            background-color: #f8f9fa;
            font-weight: bold;
            display: flex;
            align-items: center;
            justify-content: center;
            height: 100%;
        }

        .member-cell {
            min-width: 120px;
            max-width: 120px;
            position: sticky;
            left: 0;
            z-index: 2;
            background-color: #f8f9fa;
            display: flex;
            align-items: center;
            justify-content: center;
            height: 100%;
            white-space: normal;
            overflow: hidden;
            text-overflow: ellipsis;
        }

        .gantt-month-container {
            display: flex;
            flex-direction: column;
            min-width: 240px;
            flex: 1;
        }

        .gantt-month-header {
            text-align: center;
            padding: 5px;
            border-right: 1px solid #ddd;
            border-bottom: 1px solid #ddd;
            background-color: #f8f9fa;
            font-weight: bold;
            height: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .gantt-decade-container {
            display: flex;
            height: 50%;
        }

        .gantt-decade-cell {
            flex: 1;
            text-align: center;
            padding: 5px;
            border-right: 1px solid #ddd;
            border-bottom: 1px solid #ddd;
            background-color: #f8f9fa;
            font-size: 0.8rem;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .gantt-decade-context {
            flex: 1;
            text-align: center;
            padding: 5px;
            border-right: 1px solid #ddd;
            border-bottom: 1px solid #ddd;
            background-color: #f8f9fa;
            font-size: 0.8rem;
            display: flex;
            align-items: center;
            justify-content: center;
            min-width: 80px;
            position: relative;
        }

        /* 任务条样式 */
        .task-bar {
            cursor: pointer;
            position: relative;
            height: 30px;
            margin-top: 15px;
            transition: all 0.3s;
        }

            .task-bar:hover {
                opacity: 0.8;
                transform: scaleY(1.1);
            }

        /* 任务箭头样式 */
        .task-arrow-start {
            position: absolute;
            left: 0;
            top: 50%;
            width: 0;
            height: 0;
            border-top: 10px solid transparent;
            border-bottom: 10px solid transparent;
            border-left: 10px solid #333;
            transform: translateY(-50%);
        }

        .task-arrow-end {
            position: absolute;
            right: 0;
            top: 50%;
            width: 0;
            height: 0;
            border-top: 10px solid transparent;
            border-bottom: 10px solid transparent;
            border-right: 10px solid #333;
            transform: translateY(-50%);
        }

        /* 不同状态的颜色 */
        .status-completed {
            background-color: lightblue !important;
        }

        .status-overdue {
            background-color: salmon !important;
        }

        .status-upcoming {
            background-color: lightyellow !important;
        }

        .status-normal {
            background-color: lightgreen !important;
        }
    </style>
}

@section Scripts {
    <script>
        $(function() {
            // 获取模态框DOM元素并创建Bootstrap 5 Modal实例
            var modalEl = document.getElementById('taskDetailModal');
            var taskModal = new bootstrap.Modal(modalEl);

            // 点击任务条显示详情
            $('.task-bar').click(function(e) {
                e.stopPropagation();
                var workId = $(this).data('work-id');
                loadTaskDetails(workId);
                taskModal.show();
            });

            // 点击整行也显示详情
            $('.gantt-row').click(function() {
                var workId = $(this).data('work-id');
                loadTaskDetails(workId);
                taskModal.show();
            });

            // 编辑按钮点击跳转编辑页面
            $('#edit-task').click(function() {
                var workId = $('#taskDetailModal').data('work-id');
                if (workId) {
                    window.location.href = '/Works/Edit/' + workId;
                }
            });

            // 加载任务详情函数，异步请求
            function loadTaskDetails(workId) {
                $.ajax({
                    url: '/Works/GetWorkDetails/' + workId,
                    type: 'GET',
                    success: function(data) {
                        $('#taskDetailModal').data('work-id', workId);
                        $('#detail-title').text(data.title);
                        $('#detail-description').text(data.description || '无');
                        $('#detail-startdate').text(formatDate(data.startDate));
                        $('#detail-duedate').text(formatDate(data.dueDate));

                        var statusText = data.isCompleted ? '已完成' :
                            (new Date(data.dueDate) < new Date() ? '已逾期' : '进行中');
                        if (data.isCompleted && data.completedDate) {
                            statusText += ' (' + formatDate(data.completedDate) + ')';
                        }
                        $('#detail-status').text(statusText);

                        $('#detail-priority').text(data.priorityText);
                        $('#detail-members').text(data.members.join(', '));
                    },
                    error: function() {
                        alert('加载任务详情失败');
                    }
                });
            }

            // 简单日期格式化函数 yyyy-MM-dd -> N年N月N日
            function formatDate(dateString) {
                var date = new Date(dateString);
                return date.getFullYear() + '年' + (date.getMonth() + 1) + '月' + date.getDate() + '日';
            }
        });
    </script>
}
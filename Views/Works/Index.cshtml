@* Views/Works/Index.cshtml *@
@model TaskWorkManagement.Models.WorkIndexViewModel

@{
    ViewData["Title"] = "作業一覧";
}
<p>
    <a asp-action="Create" class="btn btn-primary">新規タスク作成</a>
</p>

@*创建水平排列的弹性容器，并控制其子元素（列）在垂直方向上的对齐方式*@
<div class="row align-items-start"> 
    <div class="col-md-2">
        <div class="card">
            <div class="card-header">
                <h5>メンバー</h5>
            </div>
            <div class="card-body">
                <ul class="list-group">
                    @foreach (var member in Model.Members)
                    {
                        <li class="list-group-item d-flex justify-content-between align-items-center" style="border-left: 5px solid ;">
                            @member.MemberName
                            <span class="badge badge-primary badge-pill">@member.MemberWorks.Count</span>
                        </li>
                    }
                </ul>
            </div>
        </div>
    </div>
    <div class="col-md-10">
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>作業</th>
                    <th>優先度</th>
                    <th>開始日</th>
                    <th>期限日</th>
                    <th>完了日</th>
                    <th>状態</th>
                    <th>操作</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var work in Model.Works)
                {
                    <tr>
                        <td>
                            @*@{
                                var priorityColor = work.Priority switch
                                {
                                    2 => "darkblue",      // 高い (高优先级)
                                    1 => "blue", // 中 (中优先级)
                                    0 => "deepskyblue",    // 低い (低优先级)
                                };
                            }*@
                            <span style="display: inline-block; width: 10px; height: 10px; background-color: deepskyblue; margin-right: 5px;"></span>
                            @work.Title
                        </td>
                        <td>
                            @work.Priority.ToString()

                        </td>
                        <td>@work.StartDate.ToString("yyyy-MM-dd")</td>
                        <td>@work.DueDate.ToString("yyyy-MM-dd")</td>
                        <td>@(work.CompletedDate?.ToString("yyyy-MM-dd") ?? "なし")</td>
                        <td>
                            @if (work.IsCompleted)
                            {
                                <span class="badge badge-success" style="color: black;">完了</span>
                            }
                            else if (work.DueDate < DateTime.Today)
                            {
                                <span class="badge badge-danger" style="color: red;">期限切れ</span>
                            }
                            else
                            {
                                <span class="badge badge-primary" style="color: green;">進行中</span>
                            }
                        </td>
                        <td>
                            <a asp-action="Edit" asp-route-id="@work.WorkId" class="btn btn-sm btn-outline-primary">編集</a>
                            <a asp-action="Details" asp-route-id="@work.WorkId" class="btn btn-sm btn-outline-info">詳細</a>
                            <a asp-action="Delete" asp-route-id="@work.WorkId" class="btn btn-sm btn-outline-danger">削除</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>